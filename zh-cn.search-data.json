{"/about/":{"data":{"":"","关于我#关于我":"一个喜欢弄弄数码的信息安全本科生。","目前状态#目前状态":"【23/03/20 更】 最近忙，感觉明显比较暴躁了。班里还有同学周末夜不归宿找不到人，气死人还急死人。这周末补考高数，还有计算机二级同天考。一个上午直接坐牢。。。\n【24/03/10 更】 一个寒假的回家，算是充了个能，现在有些事我也试着给自己 anyway 的心态。不必要什么事情都揽着。Just Do the Right Things What I Think. （放洋屁）","联络#联络":"电邮：daaihang#qq.com","这个网站的来由#这个网站的来由":"最初是2020年初疫情在家使用Wordpress建站。\n2023/03/20 — 2024/03/10 现在是大一寒假闲得无聊，弄了这个网站。使用Vuepress-Theme-Hope构建，部署在Github Page上。使用Netlify、Vercel和Cloudflare做CDN。\n之前已经弄过几次博客了，翻来覆去选了好多个博客系统。最初选择了Wordpress，当时是2020年初防疫在家，手头有一个树莓派，想搭一个小小的服务器。Wordpress用的还是5.x版本，许多界面不太友好。而且鬼佬的建站思维不太一样，踩了很多坑。\n后来选择用一些虚拟主机，有稳定的网络资源，云端部署也挺方便。而且找到了一家比较便宜的厂家。21年决定用腾讯云，新人优惠的70多块钱让我获得了1年的快乐。当时不仅仅尝试了Wordpress，还用过Ghost和Typecho一段时间。Ghost主打付费杂志一类，Typecho我也不想频繁上传（当时还没有Git和FTP的知识），便重新回到Wordpress的怀抱。\n最近服务器到期了，一直没有什么很大的项目需要服务器。便想着开始尝试静态网站。原本想使用Hexo或Hugo，但这两个的默认界面比较丑🤣，我就选择了比较好看的Vuepress，并且使用了Hope这个主题。Mr. Hope直接开发了这一个主题，加上了很多功能，还很好看。\n部署静态网页能学习npm和JS之类的知识，而且和源码打交道。算是一种进步🙊。\n2023/03/10 - NOW 现在是大二下了，开学第二周的周末。发现网站一年没有更新什么东西，而且 Vuepress Theme Hope 过于复杂 （可能是人老了想什么都简单点，够用就行） ，就换成了 Hugo + Github Pages 的方案，并且使用 Github Actions 部署，主打一个省事。把源码 git push 到私有仓库后直接触发在线编译，8 秒左右可以更新至公开仓库。\n另外比较难绷的是，上一版的《GZCTF部署笔记》莫名其妙被 Google 和 Bing 直接收录到相关搜索第一位。但是其中的部署文件的端口映射写错了，非常的尴尬 orz。是怎么发现的呢？是学弟搜到了我的文章，然后照着做了，发现搞不通，直接找我了🙈🙉🙊。"},"title":"关于"},"/blog/":{"data":{"":" 「博客」为非技术类文字记录。仅代表鄙人观点。 "},"title":"博客"},"/blog/check-in/":{"data":{"":"不懂从什么时候开始，大家被各种“打卡”包围了。各种 app 需要打卡，各种旅行地点需要打卡……好像是做任务，从某个npc手中接到了任务，然后拼命去完成了。\n打卡本身是没问题的，但是为什么大家会把原本只需要在工作、学习出现的方式，迁移到生活中，增加这种奇怪的生活仪式感？\n仔细看看手机中的app，游戏无一例外《LOL手游》《斗地主》《星穹铁道》，有的看似是每周任务，但体力一天就满了；外卖软件天天打卡领优惠券，缺只省得个5块3块，还是满30可用；健身软件和单词软件也在催着。\n健身和单词软件情有可原，但其他软件的打卡是否是多余了？游戏不是想玩就玩吗？何必凌晨四点服务器准备刷新了还得强行清醒上号领月卡奖励。支付宝种树领水果就像个浊水潭，你也不知道什么时候到底、到底需要花多少时间、到底浪费多少精力，就是为了戳屏幕上的树和最后的一箱果（说的是付出和回报不对等，当然有的人觉得值）。\n软件想赚存活率日活率，想方设法把我们困在某个软件的牢笼里。公司之间的争斗，个人的乐此不疲。\n不说了，要上课还得打卡呢，是吧，学习通？"},"title":"滴！打卡！"},"/docs/gzctf-build/":{"data":{"":" Github: GZTimeWalker/GZCTF\n部署方式：Docker-compose（GZCTF、数据库、题目容器均在同一Docker实例中）\n系统：Ubuntu20.04-Docker20（因此默认系统已经安装了Docker和Docker Compose）","命令行#命令行":"通过 Xshell 和 Xftp 连接服务器，上传 GZCTF 文件夹。开始部署。\ncd GZCTF docker-compose up -d 部署完成后，建议查看 log，看部署是否成功。主要是看 gzctf 容器是否连接上了数据库。\ndocker ps 查看容器 ID：\nubuntu@VM-16-8-ubuntu:~$ docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 5b9bc7a475h2 gztime/gzctf:latest \"dotnet CTFServer.dll\" 17 hours ago Up 17 hours 0.0.0.0:80-\u003e8080/tcp gzctf_gzctf_1 f00e8850dee4 postgres:alpine \"docker-entrypoint.s…\" 17 hours ago Up 17 hours 5432/tcp gzctf_db_1 看到 gzctf 的 ID 是 5b9bc7a475h2。使用 docker logs 5b9bc7a475h2 查看日志。看到连接上数据库的日志即可成功配置。","容器其他错误排查#容器其他错误排查":" 部署报错：\n不会两个文件内容改都不改吧？ 检查 pip 版本，检查 Docker 版本。 容器无法创建：数据库是否连上？看前面的配置和 docker logs xxx 命令。\n容器创建成功但无法打开网页：\n域名访问：服务商的域名配置是否正确？\n内存限制和存储限制是否太小？\n服务器的防火墙端口是否打开了？","将当前用户加入-docker-组#将当前用户加入 docker 组":"若出现下面的报错才需配置。\n[xxxx@xxxx ~]$ docker ps Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json\": dial unix /var/run/docker.sock: connect: permission denied 问题出在用户为访问 /var/run/docker.sock 的权限，只需给用户增加权限即可。命令行输入：\nsudo chown root:docker /var/run/docker.sock\t# 修改docker.sock权限为root:docker sudo groupadd docker # 添加docker用户组 sudo gpasswd -a $USER docker # 将当前用户添加至docker用户组 newgrp docker # 更新docker用户组 ","平台测试#平台测试":"登录域名或 IP（域名需要在域名服务商配置）。用 Admin 和前面设置的密码登录。（中间就自己添加比赛什么的）然后添加需要容器的题目，并测试几个 Web 容器。\n可以测试的 Docker Hub 镜像如下。这些镜像本身部署是没有问题的。若出现错误就是平台配置问题了。服务端口均为 80。\nvaalacat/push_f12 glzjin/hctf_2018_warmup ctftraining/hbctf_2017_dameixian ctftraining/qwb_2019_smarthacker ctftraining/buuctf_2018_online_tool ctftraining/qwb_2019_upload ctftraining/qwb_2019_supersqli 需要注意的是，部分镜像需要内存和存储较多，可能出现创建容器成功但无法打开网页的情况。","配置文件#配置文件":"新建两个文件，位于同一个文件夹。这里的文件夹名称为 GZCTF，文件为 appsettings.json 和 docker-compose.yml 。\nappsettings.json 文件内写入：\n{ \"AllowedHosts\": \"*\", \"ConnectionStrings\": { \"Database\": \"Host=db:5432;Database=gzctf;Username=postgres;Password=\u003cString1\u003e\" //\u003cString1\u003e换成数据库密码，随机密码且长度足够 }, \"Logging\": { \"LogLevel\": { \"Default\": \"Information\", \"Microsoft\": \"Warning\", \"Microsoft.Hosting.Lifetime\": \"Information\" } }, //邮箱配置 \"EmailConfig\": { \"SendMailAddress\": \"Admin@xxx.com\",\t// 填入邮箱 \"UserName\": \"ctf_noreply\",\t// 发件人名称 \"Password\": \"******\", // 邮箱密码，部分服务商需要填入授权码 \"Smtp\": { \"Host\": \"smtp.163.com\",\t// 此处为163邮箱服务器，具体自定 \"Port\": 465 } }, \"XorKey\": \"\u003cString2\u003e\",\t// 自定XorKey \"ContainerProvider\": { \"Type\": \"Docker\", \"PublicEntry\": \"xx.xx.xx.xx\",\t// 域名或IP配置，用于容器生成,域名不带http/https \"DockerConfig\": { \"SwarmMode\": false, \"Uri\": \"\"\t// 本地配置Docker因此此处置空 } }, \"RequestLogging\": false, \"DisableRateLimit\": false, \"RegistryConfig\": { \"UserName\": \"\", \"Password\": \"\", \"ServerAddress\": \"\" }, //谷歌验证码配置 \"GoogleRecaptcha\": { \"VerifyAPIAddress\": \"https://www.recaptcha.net/recaptcha/api/siteverify\", \"Sitekey\": \"\", \"Secretkey\": \"\", \"RecaptchaThreshold\": \"0.5\" } } docker-compose.yml 写入：\nversion: '3.0' services: gzctf: image: gztime/gzctf:latest restart: always environment: - \"GZCTF_ADMIN_PASSWORD=\u003cString3\u003e\" # \u003cString3\u003e换成管理员账户密码，账号为Admin ports: - \"80:8080\" # 对外端口号，前为外部端口。 networks: default: volumes: - \"./data/files:/app/uploads\" - \"./appsettings.json:/app/appsettings.json:ro\" - \"./logs:/app/log\" - \"./data/keys:/root/.aspnet/DataProtection-Keys\" # - \"./k8sconfig.yaml:/app/k8sconfig.yaml:ro\" - \"/var/run/docker.sock:/var/run/docker.sock\" depends_on: - db db: image: postgres:alpine restart: always environment: - \"POSTGRES_PASSWORD=\u003cString1\u003e\" # 数据库密码，务必要和appsettings.json中的配置一致 networks: default: volumes: - \"./data/db:/var/lib/postgresql/data\" networks: default: driver: bridge ipam: config: - subnet: 192.168.12.0/24 "},"title":"GZCTF 部署笔记"}}